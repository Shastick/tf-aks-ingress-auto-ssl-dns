apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  #namespace: oauth2-proxy
  namespace: ${ namespace }
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      containers:
        - args:
            - --provider=azure
%{ for domain in email_domains ~}
            - --email-domain=${domain}
%{ endfor ~}
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
            - --azure-tenant=${ azure_tenant_id }
            - --cookie-domain=${cookie_domain}
            - --cookie-name=_oauth2_proxy
            # We're running behind a reverse proxy.
            - --reverse-proxy
            # Which domains we allow to redirect to
%{ for domain in whitelist_domains ~}
            - --whitelist-domain=${domain}
%{ endfor ~}
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              # The service principal to use
              value: ${ api_client_id }
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy-auth-creds
                  key: api_client_secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy-auth-creds
                  key: api_cookie_secret
            # created by docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.2.1
          imagePullPolicy: Always
          name: oauth2-proxy
          ports:
            - containerPort: 4180
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: ${ namespace }
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app: oauth2-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy-ingress
  namespace: ${ namespace }
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: 'true'
    cert-manager.io/cluster-issuer: letsencrypt
    # IMPORTANT - azure gives us really big cookies which wont fit into default ingress configs
    # -----------------------------------------------------------------------------------------
    # Fix for: WARNING: Multiple cookies are required for this session as it exceeds the 4kb cookie limit. Please use server side session storage (eg. Redis) instead.
    # Which leads to: Error redeeming code during OAuth2 callback: token exchange failed: oauth2: cannot fetch token: 400 Bad Request
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
spec:
  tls:
    - hosts:
        - ${ internal_auth_domain }
      secretName: wildcard
  rules:
    - host: ${ internal_auth_domain }
      http:
        paths:
          - path: /
            pathType: "Prefix"
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 4180
